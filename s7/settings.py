"""
Django settings for s7 project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

if not os.environ.get("PRODUCTION"):
    load_dotenv()

DEBUG = os.environ.get("DEBUG")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]

ALLOWED_HOSTS = [
    "simplici7y.herokuapp.com",
    "www.simplici7y.com",
    "simplici7y.com",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    "items.apps.ItemsConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "imagekit",
    "rest_framework",
    "storages",
    "markdownify",
    "django.contrib.postgres",
]

MIDDLEWARE = (
    [
        "django.middleware.security.SecurityMiddleware",
    ]
    + (["whitenoise.middleware.WhiteNoiseMiddleware"] if not DEBUG else [])
    + [
        "s7.middleware.RemoveWwwAndHttpsRedirectMiddleware",
        "s7.middleware.ValidateAndCleanUrlsMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]
)

ROOT_URLCONF = "s7.urls"

AUTH_USER_MODEL = "items.User"
LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
LOGOUT_URL = "/logout/"

SCENARIOS = {
    "Marathon": "marathon",
    "Marathon: Durandal": "marathon-2-durandal",
    "Marathon: Infinity": "marathon-infinity",
}

POPULAR_TAG_NAMES = [
    "multiplayer",
    "netmaps",
    "scenario",
    "solo",
    "solocoop",
    "survival",
    "enhancement",
    "emfh",
    "ctf",
    "koth",
    "ktmwtb",
    "plugin",
    "lua",
    "physics",
    "script",
    "utility",
]

TEMPLATE_VALUES = {
    "community_links": {
        "Aleph One": {
            "href": "https://alephone.lhowon.org/",
            "description": "Play Marathon free.",
        },
        "Marathon Discord": {
            "href": "https://discord.gg/ZuJRd8xJ",
            "description": "Talk and play online.",
        },
        "Marathon Story": {
            "href": "http://forums.bungie.org/story/",
            "description": "The original Marathon forum.",
        },
        "Github - Simplici7y": {
            "href": "https://github.com/rkuykendall/Simplici7y",
            "description": "Source code for this site.",
        },
    },
    "sidebar_links": {
        "Gameplay Types": {
            "kind": "tag",
            "items": {
                "Solo": "solo",
                "Solo / Cooperative": "solocoop",
                "Survival": "survival",
                "Multiplayer": "multiplayer",
                "Every Man for Himself": "emfh",
                "King of the Hill": "koth",
                "Kill the Man with the Ball": "ktmwtb",
                "Capture the Flag": "ctf",
            },
        },
        "File Types": {
            "kind": "tag",
            "items": {
                "Map": "map",
                "Scenario": "scenario",
                "Plugin": "plugin",
                "Enhancement": "enhancement",
                "Script": "script",
                "Physics": "physics",
                "Utility": "utility",
            },
        },
        "Uploads for Scenarios": {
            "kind": "scenario",
            "items": SCENARIOS,
        },
    },
}

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "s7.context_processors.from_settings",
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "s7.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

import dj_database_url

db_from_env = dj_database_url.config(conn_max_age=600)
if db_from_env:
    DATABASES["default"].update(db_from_env)


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


STORAGES = {
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
    "mediafiles": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
}

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_ROOT = os.path.join(BASE_DIR, "items", "static")

AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
USE_S3 = AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY

if USE_S3:
    AWS_STORAGE_BUCKET_NAME = "simplici7y"
    AWS_S3_CUSTOM_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME
    AWS_S3_OBJECT_PARAMETERS = {
        "CacheControl": "max-age=86400",
    }

    AWS_LOCATION = "static"
    STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
    MEDIA_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, "media")

    STORAGES = {
        "staticfiles": {
            "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        },
        "mediafiles": {
            "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        },
        "default": {
            "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        },
    }
else:
    STATIC_URL = "/static/"
    MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Markdownify

MARKDOWNIFY = {
    "default": {
        "STRIP": False,
        "WHITELIST_TAGS": [
            "a",
            "abbr",
            "acronym",
            "b",
            "blockquote",
            "br",
            "em",
            "i",
            "li",
            "ol",
            "p",
            "strong",
            "ul",
            "h2",
            "h3",
        ],
    },
}

LOGGING = {
    "version": 1,
    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        }
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "filters": ["require_debug_true"],
            "class": "logging.StreamHandler",
        }
    },
    "loggers": {
        "django.db.backends": {
            "level": "DEBUG",
            "handlers": ["console"],
        }
    },
}

USE_THOUSAND_SEPARATOR = True

EMAIL_BACKEND = "django_ses.SESBackend"
AWS_SES_REGION_NAME = "us-east-1"
AWS_SES_REGION_ENDPOINT = "email.us-east-1.amazonaws.com"
AWS_IS_GZIPPED = True
DEFAULT_FROM_EMAIL = "leela@simplici7y.com"
